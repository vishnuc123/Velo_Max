
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        @keyframes fadeUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .animate-fade-up {
            animation: fadeUp 0.5s ease-out forwards;
        }
        @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  @keyframes fadeInUp {
    from { 
      opacity: 0; 
      transform: translateY(10px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fadeIn {
    animation: fadeIn 0.4s ease-out;
  }
  .animate-fadeInUp {
    animation: fadeInUp 0.4s ease-out forwards;
  }
    </style>

<body class="bg-gray-50 min-h-screen">


  <!-- order return modal -->
<!-- Main modal -->
<div id="select-modal" tabindex="-1" aria-hidden="true" class="hidden fixed inset-0 z-50 flex justify-center items-center w-full h-full bg-black/25 backdrop-blur-sm transition-opacity duration-300 ease-in-out">
  <div class="relative p-4 w-full max-w-md max-h-full">
    <!-- Modal content -->
    <div class="relative bg-white rounded-2xl shadow-xl dark:bg-gray-900 transform transition-all duration-300 ease-in-out animate-fadeIn">
      <!-- Modal header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-100 dark:border-gray-800">
        <h3 class="text-2xl font-semibold text-gray-900 dark:text-white">
          Return Order
        </h3>
        <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-50 hover:text-gray-900 rounded-full text-sm p-2 ms-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white transition-colors duration-200" data-modal-toggle="select-modal">
          <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
          </svg>
          <span class="sr-only">Close modal</span>
        </button>
      </div>
      <!-- Modal body -->
      <div class="p-6">
        <p class="text-gray-600 dark:text-gray-400 mb-6 text-sm animate-fadeInUp">Select a reason for returning the order:</p>
        <ul class="space-y-3 mb-6">
          <li class="animate-fadeInUp" style="animation-delay: 100ms;">
            <input type="radio" id="reason-1" name="return-reason" value="Damaged product" class="hidden peer" required />
            <label for="reason-1" class="inline-flex items-center w-full p-4 text-gray-900 bg-gray-50 border border-gray-100 rounded-xl cursor-pointer dark:hover:text-white dark:border-gray-800 dark:peer-checked:text-white peer-checked:border-blue-500 peer-checked:text-blue-500 hover:text-gray-900 hover:bg-gray-50 dark:text-white dark:bg-gray-800 dark:hover:bg-gray-700 transition-all duration-200 ease-in-out">
              Damaged product
            </label>
          </li>
          <li class="animate-fadeInUp" style="animation-delay: 200ms;">
            <input type="radio" id="reason-2" name="return-reason" value="Wrong item delivered" class="hidden peer">
            <label for="reason-2" class="inline-flex items-center w-full p-4 text-gray-900 bg-gray-50 border border-gray-100 rounded-xl cursor-pointer dark:hover:text-white dark:border-gray-800 dark:peer-checked:text-white peer-checked:border-blue-500 peer-checked:text-blue-500 hover:text-gray-900 hover:bg-gray-50 dark:text-white dark:bg-gray-800 dark:hover:bg-gray-700 transition-all duration-200 ease-in-out">
              Wrong item delivered
            </label>
          </li>
          <li class="animate-fadeInUp" style="animation-delay: 300ms;">
            <input type="radio" id="reason-3" name="return-reason" value="Not satisfied" class="hidden peer">
            <label for="reason-3" class="inline-flex items-center w-full p-4 text-gray-900 bg-gray-50 border border-gray-100 rounded-xl cursor-pointer dark:hover:text-white dark:border-gray-800 dark:peer-checked:text-white peer-checked:border-blue-500 peer-checked:text-blue-500 hover:text-gray-900 hover:bg-gray-50 dark:text-white dark:bg-gray-800 dark:hover:bg-gray-700 transition-all duration-200 ease-in-out">
              Not satisfied
            </label>
          </li>
          <li class="animate-fadeInUp" style="animation-delay: 400ms;">
            <input type="radio" id="reason-custom" name="return-reason" value="Other" class="hidden peer">
            <label for="reason-custom" class="inline-flex items-center w-full p-4 text-gray-900 bg-gray-50 border border-gray-100 rounded-xl cursor-pointer dark:hover:text-white dark:border-gray-800 dark:peer-checked:text-white peer-checked:border-blue-500 peer-checked:text-blue-500 hover:text-gray-900 hover:bg-gray-50 dark:text-white dark:bg-gray-800 dark:hover:bg-gray-700 transition-all duration-200 ease-in-out">
              Other (please specify)
            </label>
          </li>
        </ul>

        <!-- Custom reason input -->
        <div id="custom-reason-input" class="hidden animate-fadeIn mb-6">
          <textarea id="custom-reason" class="w-full p-4 bg-gray-50 border border-gray-100 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ease-in-out dark:bg-gray-800 dark:border-gray-800 dark:text-white text-sm" placeholder="Please specify your reason here"></textarea>
        </div>

        <!-- Return policy and confirmation -->
        <div class="mb-6">
          <p class="text-gray-600 dark:text-gray-400 text-sm mb-2">Please read our <a href="#" class="text-blue-500 underline" target="_blank">Return Policy</a>.</p>
          <label class="inline-flex items-center">
            <input type="checkbox" id="confirm-policy" class="form-checkbox text-blue-500" />
            <span class="ml-2 text-sm text-gray-600 dark:text-gray-400">I have read and agree to the return policy.</span>
          </label>
        </div>

        <button class="w-full inline-flex justify-center items-center p-4 text-white bg-gray-900 hover:bg-gray-800 focus:ring-4 focus:ring-gray-300 font-medium rounded-xl text-sm dark:bg-white dark:text-gray-900 dark:hover:bg-gray-100 dark:focus:ring-gray-700 transition-all duration-300 ease-in-out transform hover:translate-y-[-1px] animate-fadeInUp disabled:opacity-50 disabled:cursor-not-allowed" id="submit-return" disabled>
          Submit Return Request
        </button>
      </div>
    </div>
  </div>
</div>


    <!-- Header -->
    <header class="bg-white shadow-sm animate-fade-in">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between items-center h-16">
              <div class="flex items-center space-x-8">
                  <a href="/" class="text-xl font-semibold tracking-wider animate-slide-in">VELO MaX</a>
                  <nav class="hidden md:flex space-x-8">
                      <a href="/account" class="text-gray-900 border-b-2 border-gray-900">Profile</a>
                      <a href="/address" class="text-gray-600 hover:text-gray-900 transition-colors duration-200">Address</a>
                      <a href="/orders" class="text-gray-600 hover:text-gray-900 transition-colors duration-200">Orders</a>
                      <a href="/wallet" class="text-gray-600 hover:text-gray-900 transition-colors duration-200">Wallet</a>
                  </nav>
              </div>
  
              <div class="flex items-center space-x-4">
                  <!-- Notification Icon with Badge -->
    <div class="relative">
      <button id="notificationButton" class="p-3 rounded-full hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 relative" aria-label="Notifications">
          <i class="fas fa-bell text-gray-700 hover:text-blue-600 transition-colors duration-200 text-xl"></i>
          <!-- Badge for new notifications -->
          <span id="notificationCount" class="absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full transform scale-90 transition-transform duration-200 ease-out hidden">new</span>
      </button>
      <!-- Notification Dropdown -->
      <div id="notificationDropdown" class="hidden absolute right-0 mt-2 w-64 bg-white shadow-xl rounded-lg overflow-hidden border border-gray-200">
          <div class="bg-gray-50 px-4 py-2 border-b border-gray-200">
              <h4 class="text-gray-800 font-semibold">Notifications</h4>
          </div>
          <ul id="notificationList" class="divide-y divide-gray-200 max-h-64 overflow-y-auto">
              <!-- Notifications will be injected here -->
              <li class="text-gray-600 px-4 py-3 text-sm">No new notifications</li>
          </ul>
      </div>
  </div>

  
                  <button class="p-2 rounded-full hover:bg-gray-100 transition-colors duration-200" aria-label="User Profile">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                      </svg>
                  </button>
                  <a href="/dashboard/products" class="bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition-colors duration-200">
                      Go to store
                  </a>
              </div>
          </div>
      </div>
  </header>
  
  
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <h1 class="text-3xl font-bold mb-8 animate-fade-up">My Orders</h1>

        <!-- Tabs -->
      <div class="bg-white rounded-full p-1 mb-8 shadow-sm animate-fade-up flex justify-between max-w-2xl">
    <button class="filter-button flex-1 px-6 py-3 text-sm font-medium rounded-full bg-gray-900 text-white" onclick="filterOrders('all')" data-status="all">
        All orders
        <span class="ml-1 bg-white text-black rounded-full px-2 py-0.5 text-xs" id="all-count">0</span>
    </button>
    <button class="filter-button flex-1 px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-900" onclick="filterOrders('shipping')" data-status="shipping">
        On Shipping
        <span class="ml-1 bg-white text-black rounded-full px-2 py-0.5 text-xs" id="shipping-count">0</span>
    </button>
    <button class="filter-button flex-1 px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-900" onclick="filterOrders('arrived')" data-status="arrived">
        Arrived
        <span class="ml-1 bg-gray-100 rounded-full px-2 py-0.5 text-xs" id="arrived-count">0</span>
    </button>
    <button class="filter-button flex-1 px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-900" onclick="filterOrders('canceled')" data-status="canceled">
        Canceled
        <span class="ml-1 bg-gray-100 rounded-full px-2 py-0.5 text-xs" id="canceled-count">0</span>
    </button>
</div>

        <!-- Orders Container -->
        <div id="orders-container" class="space-y-6">
          <div id="loading-spinner" class="flex justify-center items-center space-x-4">
            <svg class="animate-spin h-5 w-5 text-gray-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v14m7-7H5" />
            </svg>
            <span>Loading orders...</span>
        </div>
        
            <!-- Orders will be dynamically inserted here -->
        </div>
        <div id="pagination" class="pagination flex justify-center mt-6">
          <!-- Pagination buttons will be dynamically added here -->
      </div>
      
    </main>

    <script>
     const notificationButton = document.getElementById('notificationButton');
const notificationDropdown = document.getElementById('notificationDropdown');
const notificationCount = document.getElementById('notificationCount');
const notificationList = document.getElementById('notificationList');

// Toggle dropdown visibility and hide badge when opened
notificationButton.addEventListener('click', () => {
    notificationDropdown.classList.toggle('hidden');
    
    // Hide the badge when dropdown is opened
    if (!notificationDropdown.classList.contains('hidden')) {
        notificationCount.classList.add('hidden');
    }
});

// Close dropdown when clicking outside
document.addEventListener('click', (event) => {
    if (!notificationButton.contains(event.target) && !notificationDropdown.contains(event.target)) {
        notificationDropdown.classList.add('hidden');
    }
});

// Example: Add a new notification
function addNotification(message) {
    const li = document.createElement('li');
    li.className = 'px-4 py-3 text-sm text-gray-700 hover:bg-gray-100';
    li.textContent = message;
    notificationList.insertBefore(li, notificationList.firstChild);
    
    if (notificationList.children[0].textContent === 'No new notifications') {
        notificationList.removeChild(notificationList.children[0]);
    }

    updateNotificationBadge();
}

// Update notification badge visibility
function updateNotificationBadge() {
    const count = notificationList.children.length;
    
    // Show the badge only if there are notifications and the dropdown is closed
    if (count > 0 && notificationDropdown.classList.contains('hidden')) {
        notificationCount.classList.remove('hidden');
    } else {
        notificationCount.classList.add('hidden');
    }
}

// Example usage
setTimeout(() => addNotification('New message received!'), 2000);
setTimeout(() => addNotification('Your order has been shipped!'), 4000);


    </script>

    <script src="/User/js/orders.js"></script>
</body>
</html>

